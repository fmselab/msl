/*
 * generated by Xtext 2.14.0
 */
package org.xtext.msl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.msl.ide.contentassist.antlr.internal.InternalMSLParser;
import org.xtext.msl.services.MSLGrammarAccess;

public class MSLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MSLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MSLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getSpecificationAccess().getGroup(), "rule__Specification__Group__0");
			builder.put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
			builder.put(grammarAccess.getAbstractPatternAccess().getGroup(), "rule__AbstractPattern__Group__0");
			builder.put(grammarAccess.getAbstractSystemAccess().getGroup(), "rule__AbstractSystem__Group__0");
			builder.put(grammarAccess.getGroupDefAccess().getGroup(), "rule__GroupDef__Group__0");
			builder.put(grammarAccess.getGroupDefAccess().getGroup_1(), "rule__GroupDef__Group_1__0");
			builder.put(grammarAccess.getAbstractGroupAccess().getGroup(), "rule__AbstractGroup__Group__0");
			builder.put(grammarAccess.getAbstractGroupAccess().getGroup_3(), "rule__AbstractGroup__Group_3__0");
			builder.put(grammarAccess.getAbstractGroupAccess().getGroup_4(), "rule__AbstractGroup__Group_4__0");
			builder.put(grammarAccess.getAbstractGroupAccess().getGroup_4_2(), "rule__AbstractGroup__Group_4_2__0");
			builder.put(grammarAccess.getAbstractGroupAccess().getGroup_7(), "rule__AbstractGroup__Group_7__0");
			builder.put(grammarAccess.getAbstractInteractionAccess().getGroup(), "rule__AbstractInteraction__Group__0");
			builder.put(grammarAccess.getAbstractInteractionAccess().getGroup_4(), "rule__AbstractInteraction__Group_4__0");
			builder.put(grammarAccess.getSystemBindingAccess().getGroup(), "rule__SystemBinding__Group__0");
			builder.put(grammarAccess.getGroupBindingAccess().getGroup(), "rule__GroupBinding__Group__0");
			builder.put(grammarAccess.getPatternAccess().getGroup(), "rule__Pattern__Group__0");
			builder.put(grammarAccess.getConfigurationAccess().getGroup(), "rule__Configuration__Group__0");
			builder.put(grammarAccess.getConfigurationAccess().getGroup_3(), "rule__Configuration__Group_3__0");
			builder.put(grammarAccess.getConfigurationAccess().getGroup_3_1(), "rule__Configuration__Group_3_1__0");
			builder.put(grammarAccess.getConcreteSystemAccess().getGroup(), "rule__ConcreteSystem__Group__0");
			builder.put(grammarAccess.getConcreteSystemAccess().getGroup_2(), "rule__ConcreteSystem__Group_2__0");
			builder.put(grammarAccess.getConcreteSystemAccess().getGroup_2_1(), "rule__ConcreteSystem__Group_2_1__0");
			builder.put(grammarAccess.getAttValueAccess().getGroup(), "rule__AttValue__Group__0");
			builder.put(grammarAccess.getConcreteGroupAccess().getGroup(), "rule__ConcreteGroup__Group__0");
			builder.put(grammarAccess.getConcreteGroupAccess().getGroup_2(), "rule__ConcreteGroup__Group_2__0");
			builder.put(grammarAccess.getConcreteGroupAccess().getGroup_2_1(), "rule__ConcreteGroup__Group_2_1__0");
			builder.put(grammarAccess.getConcreteGroupAccess().getGroup_4(), "rule__ConcreteGroup__Group_4__0");
			builder.put(grammarAccess.getConcreteGroupAccess().getGroup_4_2(), "rule__ConcreteGroup__Group_4_2__0");
			builder.put(grammarAccess.getConcreteGroupAccess().getGroup_4_2_1(), "rule__ConcreteGroup__Group_4_2_1__0");
			builder.put(grammarAccess.getConcreteGroupAccess().getGroup_5(), "rule__ConcreteGroup__Group_5__0");
			builder.put(grammarAccess.getConcreteGroupAccess().getGroup_5_2(), "rule__ConcreteGroup__Group_5_2__0");
			builder.put(grammarAccess.getConcreteGroupAccess().getGroup_8(), "rule__ConcreteGroup__Group_8__0");
			builder.put(grammarAccess.getComponentInstanceAccess().getGroup(), "rule__ComponentInstance__Group__0");
			builder.put(grammarAccess.getInteractionAccess().getGroup(), "rule__Interaction__Group__0");
			builder.put(grammarAccess.getSpecificationAccess().getImportsAssignment_0(), "rule__Specification__ImportsAssignment_0");
			builder.put(grammarAccess.getSpecificationAccess().getAbsPatternAssignment_1(), "rule__Specification__AbsPatternAssignment_1");
			builder.put(grammarAccess.getSpecificationAccess().getPatternAssignment_2(), "rule__Specification__PatternAssignment_2");
			builder.put(grammarAccess.getSpecificationAccess().getConfigurationAssignment_3(), "rule__Specification__ConfigurationAssignment_3");
			builder.put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
			builder.put(grammarAccess.getAbstractPatternAccess().getNameAssignment_2(), "rule__AbstractPattern__NameAssignment_2");
			builder.put(grammarAccess.getAbstractPatternAccess().getManagedSystemsAssignment_4(), "rule__AbstractPattern__ManagedSystemsAssignment_4");
			builder.put(grammarAccess.getAbstractPatternAccess().getAbstractGroupsAssignment_5(), "rule__AbstractPattern__AbstractGroupsAssignment_5");
			builder.put(grammarAccess.getAbstractPatternAccess().getInteractionsAssignment_6(), "rule__AbstractPattern__InteractionsAssignment_6");
			builder.put(grammarAccess.getAbstractSystemAccess().getNameAssignment_1(), "rule__AbstractSystem__NameAssignment_1");
			builder.put(grammarAccess.getAbstractComponentAccess().getNameAssignment(), "rule__AbstractComponent__NameAssignment");
			builder.put(grammarAccess.getGroupDefAccess().getGrpAssignment_0(), "rule__GroupDef__GrpAssignment_0");
			builder.put(grammarAccess.getGroupDefAccess().getMultAssignment_1_1(), "rule__GroupDef__MultAssignment_1_1");
			builder.put(grammarAccess.getAbstractGroupAccess().getNameAssignment_1(), "rule__AbstractGroup__NameAssignment_1");
			builder.put(grammarAccess.getAbstractGroupAccess().getManSysAssignment_3_1(), "rule__AbstractGroup__ManSysAssignment_3_1");
			builder.put(grammarAccess.getAbstractGroupAccess().getManGrpAssignment_4_1(), "rule__AbstractGroup__ManGrpAssignment_4_1");
			builder.put(grammarAccess.getAbstractGroupAccess().getManGrpAssignment_4_2_1(), "rule__AbstractGroup__ManGrpAssignment_4_2_1");
			builder.put(grammarAccess.getAbstractGroupAccess().getComponentsAssignment_6(), "rule__AbstractGroup__ComponentsAssignment_6");
			builder.put(grammarAccess.getAbstractGroupAccess().getComponentsAssignment_7_1(), "rule__AbstractGroup__ComponentsAssignment_7_1");
			builder.put(grammarAccess.getAbstractInteractionAccess().getStartAssignment_1(), "rule__AbstractInteraction__StartAssignment_1");
			builder.put(grammarAccess.getAbstractInteractionAccess().getEndAssignment_3(), "rule__AbstractInteraction__EndAssignment_3");
			builder.put(grammarAccess.getAbstractInteractionAccess().getLowAssignment_4_1(), "rule__AbstractInteraction__LowAssignment_4_1");
			builder.put(grammarAccess.getAbstractInteractionAccess().getHighAssignment_4_3(), "rule__AbstractInteraction__HighAssignment_4_3");
			builder.put(grammarAccess.getAbstractComponentNameAccess().getTypeAssignment(), "rule__AbstractComponentName__TypeAssignment");
			builder.put(grammarAccess.getSystemBindingAccess().getNameAssignment_1(), "rule__SystemBinding__NameAssignment_1");
			builder.put(grammarAccess.getSystemBindingAccess().getAbsSysAssignment_3(), "rule__SystemBinding__AbsSysAssignment_3");
			builder.put(grammarAccess.getGroupBindingAccess().getNameAssignment_1(), "rule__GroupBinding__NameAssignment_1");
			builder.put(grammarAccess.getGroupBindingAccess().getAbsGroupAssignment_3(), "rule__GroupBinding__AbsGroupAssignment_3");
			builder.put(grammarAccess.getPatternAccess().getNameAssignment_2(), "rule__Pattern__NameAssignment_2");
			builder.put(grammarAccess.getPatternAccess().getAbsPatternAssignment_4(), "rule__Pattern__AbsPatternAssignment_4");
			builder.put(grammarAccess.getPatternAccess().getManagedSystemsAssignment_6(), "rule__Pattern__ManagedSystemsAssignment_6");
			builder.put(grammarAccess.getPatternAccess().getGroupsAssignment_7(), "rule__Pattern__GroupsAssignment_7");
			builder.put(grammarAccess.getConfigurationAccess().getNameAssignment_1(), "rule__Configuration__NameAssignment_1");
			builder.put(grammarAccess.getConfigurationAccess().getPatternAssignment_3_0(), "rule__Configuration__PatternAssignment_3_0");
			builder.put(grammarAccess.getConfigurationAccess().getPatternAssignment_3_1_1(), "rule__Configuration__PatternAssignment_3_1_1");
			builder.put(grammarAccess.getConfigurationAccess().getConcreteSystemsAssignment_5(), "rule__Configuration__ConcreteSystemsAssignment_5");
			builder.put(grammarAccess.getConfigurationAccess().getConcreteGroupsAssignment_6(), "rule__Configuration__ConcreteGroupsAssignment_6");
			builder.put(grammarAccess.getConfigurationAccess().getConcreteInteractionsAssignment_7(), "rule__Configuration__ConcreteInteractionsAssignment_7");
			builder.put(grammarAccess.getConcreteSystemAccess().getNameAssignment_0(), "rule__ConcreteSystem__NameAssignment_0");
			builder.put(grammarAccess.getConcreteSystemAccess().getBindingsAssignment_2_0(), "rule__ConcreteSystem__BindingsAssignment_2_0");
			builder.put(grammarAccess.getConcreteSystemAccess().getBindingsAssignment_2_1_1(), "rule__ConcreteSystem__BindingsAssignment_2_1_1");
			builder.put(grammarAccess.getAttValueAccess().getNameAttAssignment_1(), "rule__AttValue__NameAttAssignment_1");
			builder.put(grammarAccess.getAttValueAccess().getValAttAssignment_3(), "rule__AttValue__ValAttAssignment_3");
			builder.put(grammarAccess.getConcreteGroupAccess().getNameAssignment_0(), "rule__ConcreteGroup__NameAssignment_0");
			builder.put(grammarAccess.getConcreteGroupAccess().getAbstractGroupsAssignment_2_0(), "rule__ConcreteGroup__AbstractGroupsAssignment_2_0");
			builder.put(grammarAccess.getConcreteGroupAccess().getAbstractGroupsAssignment_2_1_1(), "rule__ConcreteGroup__AbstractGroupsAssignment_2_1_1");
			builder.put(grammarAccess.getConcreteGroupAccess().getManSysAssignment_4_1(), "rule__ConcreteGroup__ManSysAssignment_4_1");
			builder.put(grammarAccess.getConcreteGroupAccess().getAttValuesAssignment_4_2_0(), "rule__ConcreteGroup__AttValuesAssignment_4_2_0");
			builder.put(grammarAccess.getConcreteGroupAccess().getAttValuesAssignment_4_2_1_1(), "rule__ConcreteGroup__AttValuesAssignment_4_2_1_1");
			builder.put(grammarAccess.getConcreteGroupAccess().getManGrpAssignment_5_1(), "rule__ConcreteGroup__ManGrpAssignment_5_1");
			builder.put(grammarAccess.getConcreteGroupAccess().getManGrpAssignment_5_2_1(), "rule__ConcreteGroup__ManGrpAssignment_5_2_1");
			builder.put(grammarAccess.getConcreteGroupAccess().getComponentsAssignment_7(), "rule__ConcreteGroup__ComponentsAssignment_7");
			builder.put(grammarAccess.getConcreteGroupAccess().getComponentsAssignment_8_1(), "rule__ConcreteGroup__ComponentsAssignment_8_1");
			builder.put(grammarAccess.getComponentInstanceAccess().getNameAssignment_0(), "rule__ComponentInstance__NameAssignment_0");
			builder.put(grammarAccess.getComponentInstanceAccess().getTypeAssignment_2(), "rule__ComponentInstance__TypeAssignment_2");
			builder.put(grammarAccess.getInteractionAccess().getStartAssignment_0(), "rule__Interaction__StartAssignment_0");
			builder.put(grammarAccess.getInteractionAccess().getEndAssignment_2(), "rule__Interaction__EndAssignment_2");
			builder.put(grammarAccess.getComponentNameAccess().getComponentAssignment(), "rule__ComponentName__ComponentAssignment");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MSLGrammarAccess grammarAccess;

	@Override
	protected InternalMSLParser createParser() {
		InternalMSLParser result = new InternalMSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
