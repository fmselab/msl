/**
 * generated by Xtext 2.14.0
 */
package org.xtext.msl.mSL;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Time Unit Kind</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.msl.mSL.MSLPackage#getTimeUnitKind()
 * @model
 * @generated
 */
public enum TimeUnitKind implements Enumerator
{
  /**
   * The '<em><b>SECOND</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SECOND_VALUE
   * @generated
   * @ordered
   */
  SECOND(0, "SECOND", "s"),

  /**
   * The '<em><b>MSECOND</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MSECOND_VALUE
   * @generated
   * @ordered
   */
  MSECOND(1, "MSECOND", "ms"),

  /**
   * The '<em><b>USECOND</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #USECOND_VALUE
   * @generated
   * @ordered
   */
  USECOND(2, "USECOND", "us"),

  /**
   * The '<em><b>NSECOND</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #NSECOND_VALUE
   * @generated
   * @ordered
   */
  NSECOND(3, "NSECOND", "ns"),

  /**
   * The '<em><b>MINUTE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MINUTE_VALUE
   * @generated
   * @ordered
   */
  MINUTE(4, "MINUTE", "min"),

  /**
   * The '<em><b>HOUR</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #HOUR_VALUE
   * @generated
   * @ordered
   */
  HOUR(5, "HOUR", "hrs"),

  /**
   * The '<em><b>DAY</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DAY_VALUE
   * @generated
   * @ordered
   */
  DAY(6, "DAY", "dys");

  /**
   * The '<em><b>SECOND</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>SECOND</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #SECOND
   * @model literal="s"
   * @generated
   * @ordered
   */
  public static final int SECOND_VALUE = 0;

  /**
   * The '<em><b>MSECOND</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>MSECOND</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MSECOND
   * @model literal="ms"
   * @generated
   * @ordered
   */
  public static final int MSECOND_VALUE = 1;

  /**
   * The '<em><b>USECOND</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>USECOND</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #USECOND
   * @model literal="us"
   * @generated
   * @ordered
   */
  public static final int USECOND_VALUE = 2;

  /**
   * The '<em><b>NSECOND</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>NSECOND</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #NSECOND
   * @model literal="ns"
   * @generated
   * @ordered
   */
  public static final int NSECOND_VALUE = 3;

  /**
   * The '<em><b>MINUTE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>MINUTE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MINUTE
   * @model literal="min"
   * @generated
   * @ordered
   */
  public static final int MINUTE_VALUE = 4;

  /**
   * The '<em><b>HOUR</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>HOUR</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #HOUR
   * @model literal="hrs"
   * @generated
   * @ordered
   */
  public static final int HOUR_VALUE = 5;

  /**
   * The '<em><b>DAY</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>DAY</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #DAY
   * @model literal="dys"
   * @generated
   * @ordered
   */
  public static final int DAY_VALUE = 6;

  /**
   * An array of all the '<em><b>Time Unit Kind</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final TimeUnitKind[] VALUES_ARRAY =
    new TimeUnitKind[]
    {
      SECOND,
      MSECOND,
      USECOND,
      NSECOND,
      MINUTE,
      HOUR,
      DAY,
    };

  /**
   * A public read-only list of all the '<em><b>Time Unit Kind</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<TimeUnitKind> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Time Unit Kind</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TimeUnitKind get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      TimeUnitKind result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Time Unit Kind</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TimeUnitKind getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      TimeUnitKind result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Time Unit Kind</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TimeUnitKind get(int value)
  {
    switch (value)
    {
      case SECOND_VALUE: return SECOND;
      case MSECOND_VALUE: return MSECOND;
      case USECOND_VALUE: return USECOND;
      case NSECOND_VALUE: return NSECOND;
      case MINUTE_VALUE: return MINUTE;
      case HOUR_VALUE: return HOUR;
      case DAY_VALUE: return DAY;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private TimeUnitKind(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //TimeUnitKind
