/*
 * generated by Xtext 2.16.0
 */
package org.xtext.msl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MSLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class SpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.Specification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Assignment cAbsPatternAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAbsPatternAbstractPatternParserRuleCall_1_0 = (RuleCall)cAbsPatternAssignment_1.eContents().get(0);
		private final Assignment cPatternAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPatternPatternParserRuleCall_2_0 = (RuleCall)cPatternAssignment_2.eContents().get(0);
		private final Assignment cConfigurationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConfigurationConfigurationParserRuleCall_3_0 = (RuleCall)cConfigurationAssignment_3.eContents().get(0);
		
		//Specification:
		//	imports+=Import*
		//	absPattern=AbstractPattern?
		//	pattern+=Pattern*
		//	configuration=Configuration?;
		@Override public ParserRule getRule() { return rule; }
		
		//imports+=Import* absPattern=AbstractPattern? pattern+=Pattern* configuration=Configuration?
		public Group getGroup() { return cGroup; }
		
		//imports+=Import*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }
		
		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }
		
		//absPattern=AbstractPattern?
		public Assignment getAbsPatternAssignment_1() { return cAbsPatternAssignment_1; }
		
		//AbstractPattern
		public RuleCall getAbsPatternAbstractPatternParserRuleCall_1_0() { return cAbsPatternAbstractPatternParserRuleCall_1_0; }
		
		//pattern+=Pattern*
		public Assignment getPatternAssignment_2() { return cPatternAssignment_2; }
		
		//Pattern
		public RuleCall getPatternPatternParserRuleCall_2_0() { return cPatternPatternParserRuleCall_2_0; }
		
		//configuration=Configuration?
		public Assignment getConfigurationAssignment_3() { return cConfigurationAssignment_3; }
		
		//Configuration
		public RuleCall getConfigurationConfigurationParserRuleCall_3_0() { return cConfigurationConfigurationParserRuleCall_3_0; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cImportedNamespaceAbstractPatternCrossReference_1_0 = (CrossReference)cImportedNamespaceAssignment_1.eContents().get(0);
		private final RuleCall cImportedNamespaceAbstractPatternPATTERN_IDTerminalRuleCall_1_0_1 = (RuleCall)cImportedNamespaceAbstractPatternCrossReference_1_0.eContents().get(1);
		
		//Import:
		//	'import' importedNamespace=[AbstractPattern|PATTERN_ID];
		@Override public ParserRule getRule() { return rule; }
		
		//'import' importedNamespace=[AbstractPattern|PATTERN_ID]
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//importedNamespace=[AbstractPattern|PATTERN_ID]
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }
		
		//[AbstractPattern|PATTERN_ID]
		public CrossReference getImportedNamespaceAbstractPatternCrossReference_1_0() { return cImportedNamespaceAbstractPatternCrossReference_1_0; }
		
		//PATTERN_ID
		public RuleCall getImportedNamespaceAbstractPatternPATTERN_IDTerminalRuleCall_1_0_1() { return cImportedNamespaceAbstractPatternPATTERN_IDTerminalRuleCall_1_0_1; }
	}
	public class AbstractPatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.AbstractPattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAbstractKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPatternKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNamePATTERN_IDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cManagedSystemsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cManagedSystemsAbstractSystemParserRuleCall_4_0 = (RuleCall)cManagedSystemsAssignment_4.eContents().get(0);
		private final Assignment cAbstractGroupsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAbstractGroupsAbstractGroupParserRuleCall_5_0 = (RuleCall)cAbstractGroupsAssignment_5.eContents().get(0);
		private final Assignment cInteractionsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cInteractionsAbstractInteractionParserRuleCall_6_0 = (RuleCall)cInteractionsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//AbstractPattern:
		//	'abstract' 'pattern' name=PATTERN_ID '{'
		//	managedSystems+=AbstractSystem*
		//	abstractGroups+=AbstractGroup*
		//	interactions+=AbstractInteraction*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'abstract' 'pattern' name=PATTERN_ID '{' managedSystems+=AbstractSystem* abstractGroups+=AbstractGroup*
		//interactions+=AbstractInteraction* '}'
		public Group getGroup() { return cGroup; }
		
		//'abstract'
		public Keyword getAbstractKeyword_0() { return cAbstractKeyword_0; }
		
		//'pattern'
		public Keyword getPatternKeyword_1() { return cPatternKeyword_1; }
		
		//name=PATTERN_ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//PATTERN_ID
		public RuleCall getNamePATTERN_IDTerminalRuleCall_2_0() { return cNamePATTERN_IDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//managedSystems+=AbstractSystem*
		public Assignment getManagedSystemsAssignment_4() { return cManagedSystemsAssignment_4; }
		
		//AbstractSystem
		public RuleCall getManagedSystemsAbstractSystemParserRuleCall_4_0() { return cManagedSystemsAbstractSystemParserRuleCall_4_0; }
		
		//abstractGroups+=AbstractGroup*
		public Assignment getAbstractGroupsAssignment_5() { return cAbstractGroupsAssignment_5; }
		
		//AbstractGroup
		public RuleCall getAbstractGroupsAbstractGroupParserRuleCall_5_0() { return cAbstractGroupsAbstractGroupParserRuleCall_5_0; }
		
		//interactions+=AbstractInteraction*
		public Assignment getInteractionsAssignment_6() { return cInteractionsAssignment_6; }
		
		//AbstractInteraction
		public RuleCall getInteractionsAbstractInteractionParserRuleCall_6_0() { return cInteractionsAbstractInteractionParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class AbstractSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.AbstractSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNamePATTERN_IDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//AbstractSystem:
		//	'system' name=PATTERN_ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'system' name=PATTERN_ID
		public Group getGroup() { return cGroup; }
		
		//'system'
		public Keyword getSystemKeyword_0() { return cSystemKeyword_0; }
		
		//name=PATTERN_ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//PATTERN_ID
		public RuleCall getNamePATTERN_IDTerminalRuleCall_1_0() { return cNamePATTERN_IDTerminalRuleCall_1_0; }
	}
	public class AbstractComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.AbstractComponent");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameCOMPONENT_TYPETerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//AbstractComponent:
		//	name=COMPONENT_TYPE;
		@Override public ParserRule getRule() { return rule; }
		
		//name=COMPONENT_TYPE
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//COMPONENT_TYPE
		public RuleCall getNameCOMPONENT_TYPETerminalRuleCall_0() { return cNameCOMPONENT_TYPETerminalRuleCall_0; }
	}
	public class GroupDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.GroupDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cGrpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cGrpAbstractGroupCrossReference_0_0 = (CrossReference)cGrpAssignment_0.eContents().get(0);
		private final RuleCall cGrpAbstractGroupPATTERN_IDTerminalRuleCall_0_0_1 = (RuleCall)cGrpAbstractGroupCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMultAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMultMULTIPLICITYTerminalRuleCall_1_1_0 = (RuleCall)cMultAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//GroupDef:
		//	grp=[AbstractGroup|PATTERN_ID] ('[' mult=MULTIPLICITY ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//grp=[AbstractGroup|PATTERN_ID] ('[' mult=MULTIPLICITY ']')?
		public Group getGroup() { return cGroup; }
		
		//grp=[AbstractGroup|PATTERN_ID]
		public Assignment getGrpAssignment_0() { return cGrpAssignment_0; }
		
		//[AbstractGroup|PATTERN_ID]
		public CrossReference getGrpAbstractGroupCrossReference_0_0() { return cGrpAbstractGroupCrossReference_0_0; }
		
		//PATTERN_ID
		public RuleCall getGrpAbstractGroupPATTERN_IDTerminalRuleCall_0_0_1() { return cGrpAbstractGroupPATTERN_IDTerminalRuleCall_0_0_1; }
		
		//('[' mult=MULTIPLICITY ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }
		
		//mult=MULTIPLICITY
		public Assignment getMultAssignment_1_1() { return cMultAssignment_1_1; }
		
		//MULTIPLICITY
		public RuleCall getMultMULTIPLICITYTerminalRuleCall_1_1_0() { return cMultMULTIPLICITYTerminalRuleCall_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }
	}
	public class AbstractGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.AbstractGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGroupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNamePATTERN_IDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cManagedSySKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cManSysAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cManSysAbstractSystemCrossReference_3_1_0 = (CrossReference)cManSysAssignment_3_1.eContents().get(0);
		private final RuleCall cManSysAbstractSystemPATTERN_IDTerminalRuleCall_3_1_0_1 = (RuleCall)cManSysAbstractSystemCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cManSysAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cManSysAbstractSystemCrossReference_3_2_1_0 = (CrossReference)cManSysAssignment_3_2_1.eContents().get(0);
		private final RuleCall cManSysAbstractSystemPATTERN_IDTerminalRuleCall_3_2_1_0_1 = (RuleCall)cManSysAbstractSystemCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cManagedGrpKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManGrpAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cManGrpGroupDefParserRuleCall_4_1_0 = (RuleCall)cManGrpAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cManGrpAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cManGrpGroupDefParserRuleCall_4_2_1_0 = (RuleCall)cManGrpAssignment_4_2_1.eContents().get(0);
		private final Keyword cComponentsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cComponentsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cComponentsAbstractComponentParserRuleCall_6_0 = (RuleCall)cComponentsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cComponentsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cComponentsAbstractComponentParserRuleCall_7_1_0 = (RuleCall)cComponentsAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//AbstractGroup:
		//	'group' name=PATTERN_ID '{' ('managedSyS' manSys+=[AbstractSystem|PATTERN_ID] (','
		//	manSys+=[AbstractSystem|PATTERN_ID])*)? ('managedGrp' manGrp+=GroupDef (',' manGrp+=GroupDef)*)?
		//	'components' components+=AbstractComponent (',' components+=AbstractComponent)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'group' name=PATTERN_ID '{' ('managedSyS' manSys+=[AbstractSystem|PATTERN_ID] (','
		//manSys+=[AbstractSystem|PATTERN_ID])*)? ('managedGrp' manGrp+=GroupDef (',' manGrp+=GroupDef)*)? 'components'
		//components+=AbstractComponent (',' components+=AbstractComponent)* '}'
		public Group getGroup() { return cGroup; }
		
		//'group'
		public Keyword getGroupKeyword_0() { return cGroupKeyword_0; }
		
		//name=PATTERN_ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//PATTERN_ID
		public RuleCall getNamePATTERN_IDTerminalRuleCall_1_0() { return cNamePATTERN_IDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('managedSyS' manSys+=[AbstractSystem|PATTERN_ID] (',' manSys+=[AbstractSystem|PATTERN_ID])*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'managedSyS'
		public Keyword getManagedSySKeyword_3_0() { return cManagedSySKeyword_3_0; }
		
		//manSys+=[AbstractSystem|PATTERN_ID]
		public Assignment getManSysAssignment_3_1() { return cManSysAssignment_3_1; }
		
		//[AbstractSystem|PATTERN_ID]
		public CrossReference getManSysAbstractSystemCrossReference_3_1_0() { return cManSysAbstractSystemCrossReference_3_1_0; }
		
		//PATTERN_ID
		public RuleCall getManSysAbstractSystemPATTERN_IDTerminalRuleCall_3_1_0_1() { return cManSysAbstractSystemPATTERN_IDTerminalRuleCall_3_1_0_1; }
		
		//(',' manSys+=[AbstractSystem|PATTERN_ID])*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//manSys+=[AbstractSystem|PATTERN_ID]
		public Assignment getManSysAssignment_3_2_1() { return cManSysAssignment_3_2_1; }
		
		//[AbstractSystem|PATTERN_ID]
		public CrossReference getManSysAbstractSystemCrossReference_3_2_1_0() { return cManSysAbstractSystemCrossReference_3_2_1_0; }
		
		//PATTERN_ID
		public RuleCall getManSysAbstractSystemPATTERN_IDTerminalRuleCall_3_2_1_0_1() { return cManSysAbstractSystemPATTERN_IDTerminalRuleCall_3_2_1_0_1; }
		
		//('managedGrp' manGrp+=GroupDef (',' manGrp+=GroupDef)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'managedGrp'
		public Keyword getManagedGrpKeyword_4_0() { return cManagedGrpKeyword_4_0; }
		
		//manGrp+=GroupDef
		public Assignment getManGrpAssignment_4_1() { return cManGrpAssignment_4_1; }
		
		//GroupDef
		public RuleCall getManGrpGroupDefParserRuleCall_4_1_0() { return cManGrpGroupDefParserRuleCall_4_1_0; }
		
		//(',' manGrp+=GroupDef)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//manGrp+=GroupDef
		public Assignment getManGrpAssignment_4_2_1() { return cManGrpAssignment_4_2_1; }
		
		//GroupDef
		public RuleCall getManGrpGroupDefParserRuleCall_4_2_1_0() { return cManGrpGroupDefParserRuleCall_4_2_1_0; }
		
		//'components'
		public Keyword getComponentsKeyword_5() { return cComponentsKeyword_5; }
		
		//components+=AbstractComponent
		public Assignment getComponentsAssignment_6() { return cComponentsAssignment_6; }
		
		//AbstractComponent
		public RuleCall getComponentsAbstractComponentParserRuleCall_6_0() { return cComponentsAbstractComponentParserRuleCall_6_0; }
		
		//(',' components+=AbstractComponent)*
		public Group getGroup_7() { return cGroup_7; }
		
		//','
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//components+=AbstractComponent
		public Assignment getComponentsAssignment_7_1() { return cComponentsAssignment_7_1; }
		
		//AbstractComponent
		public RuleCall getComponentsAbstractComponentParserRuleCall_7_1_0() { return cComponentsAbstractComponentParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class AbstractInteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.AbstractInteraction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInteractionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStartAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStartAbstractComponentNameParserRuleCall_1_0 = (RuleCall)cStartAssignment_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEndAbstractComponentNameParserRuleCall_3_0 = (RuleCall)cEndAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLowAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLowMULTIPLICITYTerminalRuleCall_4_1_0 = (RuleCall)cLowAssignment_4_1.eContents().get(0);
		private final Keyword cCommaKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cHighAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cHighMULTIPLICITYTerminalRuleCall_4_3_0 = (RuleCall)cHighAssignment_4_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		
		//AbstractInteraction:
		//	'interaction' start=AbstractComponentName '->' end=AbstractComponentName ('[' low=MULTIPLICITY ',' high=MULTIPLICITY
		//	']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'interaction' start=AbstractComponentName '->' end=AbstractComponentName ('[' low=MULTIPLICITY ',' high=MULTIPLICITY
		//']')?
		public Group getGroup() { return cGroup; }
		
		//'interaction'
		public Keyword getInteractionKeyword_0() { return cInteractionKeyword_0; }
		
		//start=AbstractComponentName
		public Assignment getStartAssignment_1() { return cStartAssignment_1; }
		
		//AbstractComponentName
		public RuleCall getStartAbstractComponentNameParserRuleCall_1_0() { return cStartAbstractComponentNameParserRuleCall_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }
		
		//end=AbstractComponentName
		public Assignment getEndAssignment_3() { return cEndAssignment_3; }
		
		//AbstractComponentName
		public RuleCall getEndAbstractComponentNameParserRuleCall_3_0() { return cEndAbstractComponentNameParserRuleCall_3_0; }
		
		//('[' low=MULTIPLICITY ',' high=MULTIPLICITY ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//low=MULTIPLICITY
		public Assignment getLowAssignment_4_1() { return cLowAssignment_4_1; }
		
		//MULTIPLICITY
		public RuleCall getLowMULTIPLICITYTerminalRuleCall_4_1_0() { return cLowMULTIPLICITYTerminalRuleCall_4_1_0; }
		
		//','
		public Keyword getCommaKeyword_4_2() { return cCommaKeyword_4_2; }
		
		//high=MULTIPLICITY
		public Assignment getHighAssignment_4_3() { return cHighAssignment_4_3; }
		
		//MULTIPLICITY
		public RuleCall getHighMULTIPLICITYTerminalRuleCall_4_3_0() { return cHighMULTIPLICITYTerminalRuleCall_4_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }
	}
	public class AbstractComponentNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.AbstractComponentName");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeAbstractComponentCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeAbstractComponentFQN_COMPONENTTerminalRuleCall_0_1 = (RuleCall)cTypeAbstractComponentCrossReference_0.eContents().get(1);
		
		//AbstractComponentName:
		//	type=[AbstractComponent|FQN_COMPONENT];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[AbstractComponent|FQN_COMPONENT]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[AbstractComponent|FQN_COMPONENT]
		public CrossReference getTypeAbstractComponentCrossReference_0() { return cTypeAbstractComponentCrossReference_0; }
		
		//FQN_COMPONENT
		public RuleCall getTypeAbstractComponentFQN_COMPONENTTerminalRuleCall_0_1() { return cTypeAbstractComponentFQN_COMPONENTTerminalRuleCall_0_1; }
	}
	public class SystemBindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.SystemBinding");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNamePATTERN_IDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAbsSysAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAbsSysAbstractSystemCrossReference_3_0 = (CrossReference)cAbsSysAssignment_3.eContents().get(0);
		private final RuleCall cAbsSysAbstractSystemFQN_PATTERN_IDTerminalRuleCall_3_0_1 = (RuleCall)cAbsSysAbstractSystemCrossReference_3_0.eContents().get(1);
		
		//SystemBinding:
		//	'system' name=PATTERN_ID ':' absSys=[AbstractSystem|FQN_PATTERN_ID];
		@Override public ParserRule getRule() { return rule; }
		
		//'system' name=PATTERN_ID ':' absSys=[AbstractSystem|FQN_PATTERN_ID]
		public Group getGroup() { return cGroup; }
		
		//'system'
		public Keyword getSystemKeyword_0() { return cSystemKeyword_0; }
		
		//name=PATTERN_ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//PATTERN_ID
		public RuleCall getNamePATTERN_IDTerminalRuleCall_1_0() { return cNamePATTERN_IDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//absSys=[AbstractSystem|FQN_PATTERN_ID]
		public Assignment getAbsSysAssignment_3() { return cAbsSysAssignment_3; }
		
		//[AbstractSystem|FQN_PATTERN_ID]
		public CrossReference getAbsSysAbstractSystemCrossReference_3_0() { return cAbsSysAbstractSystemCrossReference_3_0; }
		
		//FQN_PATTERN_ID
		public RuleCall getAbsSysAbstractSystemFQN_PATTERN_IDTerminalRuleCall_3_0_1() { return cAbsSysAbstractSystemFQN_PATTERN_IDTerminalRuleCall_3_0_1; }
	}
	public class GroupBindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.GroupBinding");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGroupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNamePATTERN_IDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAbsGroupAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAbsGroupAbstractGroupCrossReference_3_0 = (CrossReference)cAbsGroupAssignment_3.eContents().get(0);
		private final RuleCall cAbsGroupAbstractGroupFQN_PATTERN_IDTerminalRuleCall_3_0_1 = (RuleCall)cAbsGroupAbstractGroupCrossReference_3_0.eContents().get(1);
		
		//GroupBinding:
		//	'group' name=PATTERN_ID ':' absGroup=[AbstractGroup|FQN_PATTERN_ID];
		@Override public ParserRule getRule() { return rule; }
		
		//'group' name=PATTERN_ID ':' absGroup=[AbstractGroup|FQN_PATTERN_ID]
		public Group getGroup() { return cGroup; }
		
		//'group'
		public Keyword getGroupKeyword_0() { return cGroupKeyword_0; }
		
		//name=PATTERN_ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//PATTERN_ID
		public RuleCall getNamePATTERN_IDTerminalRuleCall_1_0() { return cNamePATTERN_IDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//absGroup=[AbstractGroup|FQN_PATTERN_ID]
		public Assignment getAbsGroupAssignment_3() { return cAbsGroupAssignment_3; }
		
		//[AbstractGroup|FQN_PATTERN_ID]
		public CrossReference getAbsGroupAbstractGroupCrossReference_3_0() { return cAbsGroupAbstractGroupCrossReference_3_0; }
		
		//FQN_PATTERN_ID
		public RuleCall getAbsGroupAbstractGroupFQN_PATTERN_IDTerminalRuleCall_3_0_1() { return cAbsGroupAbstractGroupFQN_PATTERN_IDTerminalRuleCall_3_0_1; }
	}
	public class PatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.Pattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConcreteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPatternKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNamePATTERN_IDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cConcretizationOfKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAbsPatternAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cAbsPatternAbstractPatternCrossReference_4_0 = (CrossReference)cAbsPatternAssignment_4.eContents().get(0);
		private final RuleCall cAbsPatternAbstractPatternPATTERN_IDTerminalRuleCall_4_0_1 = (RuleCall)cAbsPatternAbstractPatternCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cManagedSystemsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cManagedSystemsSystemBindingParserRuleCall_6_0 = (RuleCall)cManagedSystemsAssignment_6.eContents().get(0);
		private final Assignment cGroupsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cGroupsGroupBindingParserRuleCall_7_0 = (RuleCall)cGroupsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Pattern:
		//	'concrete' 'pattern' name=PATTERN_ID 'concretizationOf' absPattern=[AbstractPattern|PATTERN_ID] '{'
		//	managedSystems+=SystemBinding*
		//	groups+=GroupBinding*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'concrete' 'pattern' name=PATTERN_ID 'concretizationOf' absPattern=[AbstractPattern|PATTERN_ID] '{'
		//managedSystems+=SystemBinding* groups+=GroupBinding* '}'
		public Group getGroup() { return cGroup; }
		
		//'concrete'
		public Keyword getConcreteKeyword_0() { return cConcreteKeyword_0; }
		
		//'pattern'
		public Keyword getPatternKeyword_1() { return cPatternKeyword_1; }
		
		//name=PATTERN_ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//PATTERN_ID
		public RuleCall getNamePATTERN_IDTerminalRuleCall_2_0() { return cNamePATTERN_IDTerminalRuleCall_2_0; }
		
		//'concretizationOf'
		public Keyword getConcretizationOfKeyword_3() { return cConcretizationOfKeyword_3; }
		
		//absPattern=[AbstractPattern|PATTERN_ID]
		public Assignment getAbsPatternAssignment_4() { return cAbsPatternAssignment_4; }
		
		//[AbstractPattern|PATTERN_ID]
		public CrossReference getAbsPatternAbstractPatternCrossReference_4_0() { return cAbsPatternAbstractPatternCrossReference_4_0; }
		
		//PATTERN_ID
		public RuleCall getAbsPatternAbstractPatternPATTERN_IDTerminalRuleCall_4_0_1() { return cAbsPatternAbstractPatternPATTERN_IDTerminalRuleCall_4_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//managedSystems+=SystemBinding*
		public Assignment getManagedSystemsAssignment_6() { return cManagedSystemsAssignment_6; }
		
		//SystemBinding
		public RuleCall getManagedSystemsSystemBindingParserRuleCall_6_0() { return cManagedSystemsSystemBindingParserRuleCall_6_0; }
		
		//groups+=GroupBinding*
		public Assignment getGroupsAssignment_7() { return cGroupsAssignment_7; }
		
		//GroupBinding
		public RuleCall getGroupsGroupBindingParserRuleCall_7_0() { return cGroupsGroupBindingParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.Configuration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConfigurationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNamePATTERN_IDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cInstanceOfKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cPatternAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final CrossReference cPatternPatternCrossReference_3_0_0 = (CrossReference)cPatternAssignment_3_0.eContents().get(0);
		private final RuleCall cPatternPatternPATTERN_IDTerminalRuleCall_3_0_0_1 = (RuleCall)cPatternPatternCrossReference_3_0_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cPatternAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cPatternPatternCrossReference_3_1_1_0 = (CrossReference)cPatternAssignment_3_1_1.eContents().get(0);
		private final RuleCall cPatternPatternPATTERN_IDTerminalRuleCall_3_1_1_0_1 = (RuleCall)cPatternPatternCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cConcreteSystemsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cConcreteSystemsConcreteSystemParserRuleCall_5_0 = (RuleCall)cConcreteSystemsAssignment_5.eContents().get(0);
		private final Assignment cConcreteGroupsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConcreteGroupsConcreteGroupParserRuleCall_6_0 = (RuleCall)cConcreteGroupsAssignment_6.eContents().get(0);
		private final Assignment cConcreteInteractionsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cConcreteInteractionsInteractionParserRuleCall_7_0 = (RuleCall)cConcreteInteractionsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Configuration:
		//	'configuration' name=PATTERN_ID 'instanceOf' (pattern+=[Pattern|PATTERN_ID] (',' pattern+=[Pattern|PATTERN_ID])*) '{'
		//	concreteSystems+=ConcreteSystem*
		//	concreteGroups+=ConcreteGroup*
		//	concreteInteractions+=Interaction*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'configuration' name=PATTERN_ID 'instanceOf' (pattern+=[Pattern|PATTERN_ID] (',' pattern+=[Pattern|PATTERN_ID])*) '{'
		//concreteSystems+=ConcreteSystem* concreteGroups+=ConcreteGroup* concreteInteractions+=Interaction* '}'
		public Group getGroup() { return cGroup; }
		
		//'configuration'
		public Keyword getConfigurationKeyword_0() { return cConfigurationKeyword_0; }
		
		//name=PATTERN_ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//PATTERN_ID
		public RuleCall getNamePATTERN_IDTerminalRuleCall_1_0() { return cNamePATTERN_IDTerminalRuleCall_1_0; }
		
		//'instanceOf'
		public Keyword getInstanceOfKeyword_2() { return cInstanceOfKeyword_2; }
		
		//pattern+=[Pattern|PATTERN_ID] (',' pattern+=[Pattern|PATTERN_ID])*
		public Group getGroup_3() { return cGroup_3; }
		
		//pattern+=[Pattern|PATTERN_ID]
		public Assignment getPatternAssignment_3_0() { return cPatternAssignment_3_0; }
		
		//[Pattern|PATTERN_ID]
		public CrossReference getPatternPatternCrossReference_3_0_0() { return cPatternPatternCrossReference_3_0_0; }
		
		//PATTERN_ID
		public RuleCall getPatternPatternPATTERN_IDTerminalRuleCall_3_0_0_1() { return cPatternPatternPATTERN_IDTerminalRuleCall_3_0_0_1; }
		
		//(',' pattern+=[Pattern|PATTERN_ID])*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//','
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }
		
		//pattern+=[Pattern|PATTERN_ID]
		public Assignment getPatternAssignment_3_1_1() { return cPatternAssignment_3_1_1; }
		
		//[Pattern|PATTERN_ID]
		public CrossReference getPatternPatternCrossReference_3_1_1_0() { return cPatternPatternCrossReference_3_1_1_0; }
		
		//PATTERN_ID
		public RuleCall getPatternPatternPATTERN_IDTerminalRuleCall_3_1_1_0_1() { return cPatternPatternPATTERN_IDTerminalRuleCall_3_1_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//concreteSystems+=ConcreteSystem*
		public Assignment getConcreteSystemsAssignment_5() { return cConcreteSystemsAssignment_5; }
		
		//ConcreteSystem
		public RuleCall getConcreteSystemsConcreteSystemParserRuleCall_5_0() { return cConcreteSystemsConcreteSystemParserRuleCall_5_0; }
		
		//concreteGroups+=ConcreteGroup*
		public Assignment getConcreteGroupsAssignment_6() { return cConcreteGroupsAssignment_6; }
		
		//ConcreteGroup
		public RuleCall getConcreteGroupsConcreteGroupParserRuleCall_6_0() { return cConcreteGroupsConcreteGroupParserRuleCall_6_0; }
		
		//concreteInteractions+=Interaction*
		public Assignment getConcreteInteractionsAssignment_7() { return cConcreteInteractionsAssignment_7; }
		
		//Interaction
		public RuleCall getConcreteInteractionsInteractionParserRuleCall_7_0() { return cConcreteInteractionsInteractionParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ConcreteSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.ConcreteSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameINSTANCE_IDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cBindingsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final CrossReference cBindingsSystemBindingCrossReference_2_0_0 = (CrossReference)cBindingsAssignment_2_0.eContents().get(0);
		private final RuleCall cBindingsSystemBindingFQN_PATTERN_IDTerminalRuleCall_2_0_0_1 = (RuleCall)cBindingsSystemBindingCrossReference_2_0_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cBindingsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cBindingsSystemBindingCrossReference_2_1_1_0 = (CrossReference)cBindingsAssignment_2_1_1.eContents().get(0);
		private final RuleCall cBindingsSystemBindingFQN_PATTERN_IDTerminalRuleCall_2_1_1_0_1 = (RuleCall)cBindingsSystemBindingCrossReference_2_1_1_0.eContents().get(1);
		
		//ConcreteSystem:
		//	name=INSTANCE_ID ':' (bindings+=[SystemBinding|FQN_PATTERN_ID] (',' bindings+=[SystemBinding|FQN_PATTERN_ID])*);
		@Override public ParserRule getRule() { return rule; }
		
		//name=INSTANCE_ID ':' (bindings+=[SystemBinding|FQN_PATTERN_ID] (',' bindings+=[SystemBinding|FQN_PATTERN_ID])*)
		public Group getGroup() { return cGroup; }
		
		//name=INSTANCE_ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//INSTANCE_ID
		public RuleCall getNameINSTANCE_IDTerminalRuleCall_0_0() { return cNameINSTANCE_IDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//bindings+=[SystemBinding|FQN_PATTERN_ID] (',' bindings+=[SystemBinding|FQN_PATTERN_ID])*
		public Group getGroup_2() { return cGroup_2; }
		
		//bindings+=[SystemBinding|FQN_PATTERN_ID]
		public Assignment getBindingsAssignment_2_0() { return cBindingsAssignment_2_0; }
		
		//[SystemBinding|FQN_PATTERN_ID]
		public CrossReference getBindingsSystemBindingCrossReference_2_0_0() { return cBindingsSystemBindingCrossReference_2_0_0; }
		
		//FQN_PATTERN_ID
		public RuleCall getBindingsSystemBindingFQN_PATTERN_IDTerminalRuleCall_2_0_0_1() { return cBindingsSystemBindingFQN_PATTERN_IDTerminalRuleCall_2_0_0_1; }
		
		//(',' bindings+=[SystemBinding|FQN_PATTERN_ID])*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//bindings+=[SystemBinding|FQN_PATTERN_ID]
		public Assignment getBindingsAssignment_2_1_1() { return cBindingsAssignment_2_1_1; }
		
		//[SystemBinding|FQN_PATTERN_ID]
		public CrossReference getBindingsSystemBindingCrossReference_2_1_1_0() { return cBindingsSystemBindingCrossReference_2_1_1_0; }
		
		//FQN_PATTERN_ID
		public RuleCall getBindingsSystemBindingFQN_PATTERN_IDTerminalRuleCall_2_1_1_0_1() { return cBindingsSystemBindingFQN_PATTERN_IDTerminalRuleCall_2_1_1_0_1; }
	}
	public class ConcreteGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.ConcreteGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameINSTANCE_IDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cAbstractGroupsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final CrossReference cAbstractGroupsGroupBindingCrossReference_2_0_0 = (CrossReference)cAbstractGroupsAssignment_2_0.eContents().get(0);
		private final RuleCall cAbstractGroupsGroupBindingFQN_PATTERN_IDTerminalRuleCall_2_0_0_1 = (RuleCall)cAbstractGroupsGroupBindingCrossReference_2_0_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cAbstractGroupsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cAbstractGroupsGroupBindingCrossReference_2_1_1_0 = (CrossReference)cAbstractGroupsAssignment_2_1_1.eContents().get(0);
		private final RuleCall cAbstractGroupsGroupBindingFQN_PATTERN_IDTerminalRuleCall_2_1_1_0_1 = (RuleCall)cAbstractGroupsGroupBindingCrossReference_2_1_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cManagedSySKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManSysAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cManSysConcreteSystemCrossReference_4_1_0 = (CrossReference)cManSysAssignment_4_1.eContents().get(0);
		private final RuleCall cManSysConcreteSystemINSTANCE_IDTerminalRuleCall_4_1_0_1 = (RuleCall)cManSysConcreteSystemCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cManSysAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cManSysConcreteSystemCrossReference_4_2_1_0 = (CrossReference)cManSysAssignment_4_2_1.eContents().get(0);
		private final RuleCall cManSysConcreteSystemINSTANCE_IDTerminalRuleCall_4_2_1_0_1 = (RuleCall)cManSysConcreteSystemCrossReference_4_2_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cManagedGrpKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cManGrpAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cManGrpConcreteGroupCrossReference_5_1_0 = (CrossReference)cManGrpAssignment_5_1.eContents().get(0);
		private final RuleCall cManGrpConcreteGroupINSTANCE_IDTerminalRuleCall_5_1_0_1 = (RuleCall)cManGrpConcreteGroupCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cManGrpAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cManGrpConcreteGroupCrossReference_5_2_1_0 = (CrossReference)cManGrpAssignment_5_2_1.eContents().get(0);
		private final RuleCall cManGrpConcreteGroupINSTANCE_IDTerminalRuleCall_5_2_1_0_1 = (RuleCall)cManGrpConcreteGroupCrossReference_5_2_1_0.eContents().get(1);
		private final Keyword cComponentsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cComponentsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cComponentsComponentInstanceParserRuleCall_7_0 = (RuleCall)cComponentsAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cComponentsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cComponentsComponentInstanceParserRuleCall_8_1_0 = (RuleCall)cComponentsAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		////AttValue: "(" nameAtt=INSTANCE_ID ',' valAtt=INSTANCE_ID ")";
		//ConcreteGroup:
		//	name=INSTANCE_ID ':' (abstractGroups+=[GroupBinding|FQN_PATTERN_ID] (','
		//	abstractGroups+=[GroupBinding|FQN_PATTERN_ID])*) '{' ('managedSyS' manSys+=[ConcreteSystem|INSTANCE_ID] (','
		//	manSys+=[ConcreteSystem|INSTANCE_ID])*)? ('managedGrp' manGrp+=[ConcreteGroup|INSTANCE_ID] (','
		//	manGrp+=[ConcreteGroup|INSTANCE_ID])*)?
		//	'components' components+=ComponentInstance (',' components+=ComponentInstance)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//name=INSTANCE_ID ':' (abstractGroups+=[GroupBinding|FQN_PATTERN_ID] (','
		//abstractGroups+=[GroupBinding|FQN_PATTERN_ID])*) '{' ('managedSyS' manSys+=[ConcreteSystem|INSTANCE_ID] (','
		//manSys+=[ConcreteSystem|INSTANCE_ID])*)? ('managedGrp' manGrp+=[ConcreteGroup|INSTANCE_ID] (','
		//manGrp+=[ConcreteGroup|INSTANCE_ID])*)? 'components' components+=ComponentInstance (','
		//components+=ComponentInstance)* '}'
		public Group getGroup() { return cGroup; }
		
		//name=INSTANCE_ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//INSTANCE_ID
		public RuleCall getNameINSTANCE_IDTerminalRuleCall_0_0() { return cNameINSTANCE_IDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//abstractGroups+=[GroupBinding|FQN_PATTERN_ID] (',' abstractGroups+=[GroupBinding|FQN_PATTERN_ID])*
		public Group getGroup_2() { return cGroup_2; }
		
		//abstractGroups+=[GroupBinding|FQN_PATTERN_ID]
		public Assignment getAbstractGroupsAssignment_2_0() { return cAbstractGroupsAssignment_2_0; }
		
		//[GroupBinding|FQN_PATTERN_ID]
		public CrossReference getAbstractGroupsGroupBindingCrossReference_2_0_0() { return cAbstractGroupsGroupBindingCrossReference_2_0_0; }
		
		//FQN_PATTERN_ID
		public RuleCall getAbstractGroupsGroupBindingFQN_PATTERN_IDTerminalRuleCall_2_0_0_1() { return cAbstractGroupsGroupBindingFQN_PATTERN_IDTerminalRuleCall_2_0_0_1; }
		
		//(',' abstractGroups+=[GroupBinding|FQN_PATTERN_ID])*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//abstractGroups+=[GroupBinding|FQN_PATTERN_ID]
		public Assignment getAbstractGroupsAssignment_2_1_1() { return cAbstractGroupsAssignment_2_1_1; }
		
		//[GroupBinding|FQN_PATTERN_ID]
		public CrossReference getAbstractGroupsGroupBindingCrossReference_2_1_1_0() { return cAbstractGroupsGroupBindingCrossReference_2_1_1_0; }
		
		//FQN_PATTERN_ID
		public RuleCall getAbstractGroupsGroupBindingFQN_PATTERN_IDTerminalRuleCall_2_1_1_0_1() { return cAbstractGroupsGroupBindingFQN_PATTERN_IDTerminalRuleCall_2_1_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('managedSyS' manSys+=[ConcreteSystem|INSTANCE_ID] (',' manSys+=[ConcreteSystem|INSTANCE_ID])*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'managedSyS'
		public Keyword getManagedSySKeyword_4_0() { return cManagedSySKeyword_4_0; }
		
		//manSys+=[ConcreteSystem|INSTANCE_ID]
		public Assignment getManSysAssignment_4_1() { return cManSysAssignment_4_1; }
		
		//[ConcreteSystem|INSTANCE_ID]
		public CrossReference getManSysConcreteSystemCrossReference_4_1_0() { return cManSysConcreteSystemCrossReference_4_1_0; }
		
		//INSTANCE_ID
		public RuleCall getManSysConcreteSystemINSTANCE_IDTerminalRuleCall_4_1_0_1() { return cManSysConcreteSystemINSTANCE_IDTerminalRuleCall_4_1_0_1; }
		
		//(',' manSys+=[ConcreteSystem|INSTANCE_ID])*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//manSys+=[ConcreteSystem|INSTANCE_ID]
		public Assignment getManSysAssignment_4_2_1() { return cManSysAssignment_4_2_1; }
		
		//[ConcreteSystem|INSTANCE_ID]
		public CrossReference getManSysConcreteSystemCrossReference_4_2_1_0() { return cManSysConcreteSystemCrossReference_4_2_1_0; }
		
		//INSTANCE_ID
		public RuleCall getManSysConcreteSystemINSTANCE_IDTerminalRuleCall_4_2_1_0_1() { return cManSysConcreteSystemINSTANCE_IDTerminalRuleCall_4_2_1_0_1; }
		
		//('managedGrp' manGrp+=[ConcreteGroup|INSTANCE_ID] (',' manGrp+=[ConcreteGroup|INSTANCE_ID])*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'managedGrp'
		public Keyword getManagedGrpKeyword_5_0() { return cManagedGrpKeyword_5_0; }
		
		//manGrp+=[ConcreteGroup|INSTANCE_ID]
		public Assignment getManGrpAssignment_5_1() { return cManGrpAssignment_5_1; }
		
		//[ConcreteGroup|INSTANCE_ID]
		public CrossReference getManGrpConcreteGroupCrossReference_5_1_0() { return cManGrpConcreteGroupCrossReference_5_1_0; }
		
		//INSTANCE_ID
		public RuleCall getManGrpConcreteGroupINSTANCE_IDTerminalRuleCall_5_1_0_1() { return cManGrpConcreteGroupINSTANCE_IDTerminalRuleCall_5_1_0_1; }
		
		//(',' manGrp+=[ConcreteGroup|INSTANCE_ID])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//manGrp+=[ConcreteGroup|INSTANCE_ID]
		public Assignment getManGrpAssignment_5_2_1() { return cManGrpAssignment_5_2_1; }
		
		//[ConcreteGroup|INSTANCE_ID]
		public CrossReference getManGrpConcreteGroupCrossReference_5_2_1_0() { return cManGrpConcreteGroupCrossReference_5_2_1_0; }
		
		//INSTANCE_ID
		public RuleCall getManGrpConcreteGroupINSTANCE_IDTerminalRuleCall_5_2_1_0_1() { return cManGrpConcreteGroupINSTANCE_IDTerminalRuleCall_5_2_1_0_1; }
		
		//'components'
		public Keyword getComponentsKeyword_6() { return cComponentsKeyword_6; }
		
		//components+=ComponentInstance
		public Assignment getComponentsAssignment_7() { return cComponentsAssignment_7; }
		
		//ComponentInstance
		public RuleCall getComponentsComponentInstanceParserRuleCall_7_0() { return cComponentsComponentInstanceParserRuleCall_7_0; }
		
		//(',' components+=ComponentInstance)*
		public Group getGroup_8() { return cGroup_8; }
		
		//','
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//components+=ComponentInstance
		public Assignment getComponentsAssignment_8_1() { return cComponentsAssignment_8_1; }
		
		//ComponentInstance
		public RuleCall getComponentsComponentInstanceParserRuleCall_8_1_0() { return cComponentsComponentInstanceParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ParamValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.ParamValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameParamAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameParamINSTANCE_IDTerminalRuleCall_1_0 = (RuleCall)cNameParamAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValParamAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValParamDECIMALTerminalRuleCall_3_0 = (RuleCall)cValParamAssignment_3.eContents().get(0);
		private final Assignment cUnitAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cUnitTimeUnitKindEnumRuleCall_4_0 = (RuleCall)cUnitAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////To allow real type NFPs annotations at component instance level 
		//ParamValue:
		//	"[" nameParam=INSTANCE_ID '=' valParam=DECIMAL unit=TimeUnitKind? "]";
		@Override public ParserRule getRule() { return rule; }
		
		//"[" nameParam=INSTANCE_ID '=' valParam=DECIMAL unit=TimeUnitKind? "]"
		public Group getGroup() { return cGroup; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//nameParam=INSTANCE_ID
		public Assignment getNameParamAssignment_1() { return cNameParamAssignment_1; }
		
		//INSTANCE_ID
		public RuleCall getNameParamINSTANCE_IDTerminalRuleCall_1_0() { return cNameParamINSTANCE_IDTerminalRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//valParam=DECIMAL
		public Assignment getValParamAssignment_3() { return cValParamAssignment_3; }
		
		//DECIMAL
		public RuleCall getValParamDECIMALTerminalRuleCall_3_0() { return cValParamDECIMALTerminalRuleCall_3_0; }
		
		//unit=TimeUnitKind?
		public Assignment getUnitAssignment_4() { return cUnitAssignment_4; }
		
		//TimeUnitKind
		public RuleCall getUnitTimeUnitKindEnumRuleCall_4_0() { return cUnitTimeUnitKindEnumRuleCall_4_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class ComponentInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.ComponentInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameINSTANCE_IDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeCOMPONENT_TYPETerminalRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParamValuesAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParamValuesParamValueParserRuleCall_3_0_0 = (RuleCall)cParamValuesAssignment_3_0.eContents().get(0);
		private final Assignment cParamValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cParamValuesParamValueParserRuleCall_3_1_0 = (RuleCall)cParamValuesAssignment_3_1.eContents().get(0);
		
		//ComponentInstance:
		//	name=INSTANCE_ID ':' type=COMPONENT_TYPE (paramValues+=ParamValue paramValues+=ParamValue*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=INSTANCE_ID ':' type=COMPONENT_TYPE (paramValues+=ParamValue paramValues+=ParamValue*)?
		public Group getGroup() { return cGroup; }
		
		//name=INSTANCE_ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//INSTANCE_ID
		public RuleCall getNameINSTANCE_IDTerminalRuleCall_0_0() { return cNameINSTANCE_IDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=COMPONENT_TYPE
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//COMPONENT_TYPE
		public RuleCall getTypeCOMPONENT_TYPETerminalRuleCall_2_0() { return cTypeCOMPONENT_TYPETerminalRuleCall_2_0; }
		
		//(paramValues+=ParamValue paramValues+=ParamValue*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//paramValues+=ParamValue
		public Assignment getParamValuesAssignment_3_0() { return cParamValuesAssignment_3_0; }
		
		//ParamValue
		public RuleCall getParamValuesParamValueParserRuleCall_3_0_0() { return cParamValuesParamValueParserRuleCall_3_0_0; }
		
		//paramValues+=ParamValue*
		public Assignment getParamValuesAssignment_3_1() { return cParamValuesAssignment_3_1; }
		
		//ParamValue
		public RuleCall getParamValuesParamValueParserRuleCall_3_1_0() { return cParamValuesParamValueParserRuleCall_3_1_0; }
	}
	public class InteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.Interaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStartAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cStartComponentNameParserRuleCall_0_0 = (RuleCall)cStartAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEndAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEndComponentNameParserRuleCall_2_0 = (RuleCall)cEndAssignment_2.eContents().get(0);
		
		//Interaction:
		//	start=ComponentName '->' end=ComponentName;
		@Override public ParserRule getRule() { return rule; }
		
		//start=ComponentName '->' end=ComponentName
		public Group getGroup() { return cGroup; }
		
		//start=ComponentName
		public Assignment getStartAssignment_0() { return cStartAssignment_0; }
		
		//ComponentName
		public RuleCall getStartComponentNameParserRuleCall_0_0() { return cStartComponentNameParserRuleCall_0_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }
		
		//end=ComponentName
		public Assignment getEndAssignment_2() { return cEndAssignment_2; }
		
		//ComponentName
		public RuleCall getEndComponentNameParserRuleCall_2_0() { return cEndComponentNameParserRuleCall_2_0; }
	}
	public class ComponentNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.ComponentName");
		private final Assignment cComponentAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cComponentComponentInstanceCrossReference_0 = (CrossReference)cComponentAssignment.eContents().get(0);
		private final RuleCall cComponentComponentInstanceFQN_INSTANCE_IDTerminalRuleCall_0_1 = (RuleCall)cComponentComponentInstanceCrossReference_0.eContents().get(1);
		
		//ComponentName:
		//	component=[ComponentInstance|FQN_INSTANCE_ID];
		@Override public ParserRule getRule() { return rule; }
		
		//component=[ComponentInstance|FQN_INSTANCE_ID]
		public Assignment getComponentAssignment() { return cComponentAssignment; }
		
		//[ComponentInstance|FQN_INSTANCE_ID]
		public CrossReference getComponentComponentInstanceCrossReference_0() { return cComponentComponentInstanceCrossReference_0; }
		
		//FQN_INSTANCE_ID
		public RuleCall getComponentComponentInstanceFQN_INSTANCE_IDTerminalRuleCall_0_1() { return cComponentComponentInstanceFQN_INSTANCE_IDTerminalRuleCall_0_1; }
	}
	
	public class TimeUnitKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.TimeUnitKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSECONDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSECONDSKeyword_0_0 = (Keyword)cSECONDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMSECONDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMSECONDMsKeyword_1_0 = (Keyword)cMSECONDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cUSECONDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cUSECONDUsKeyword_2_0 = (Keyword)cUSECONDEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cNSECONDEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cNSECONDNsKeyword_3_0 = (Keyword)cNSECONDEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cMINUTEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cMINUTEMinKeyword_4_0 = (Keyword)cMINUTEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cHOUREnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cHOURHrsKeyword_5_0 = (Keyword)cHOUREnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cDAYEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cDAYDysKeyword_6_0 = (Keyword)cDAYEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum TimeUnitKind:
		//	SECOND='s' |
		//	MSECOND='ms' |
		//	USECOND='us' |
		//	NSECOND='ns' |
		//	MINUTE='min' |
		//	HOUR='hrs' |
		//	DAY='dys';
		@Override
		public EnumRule getRule() { return rule; }
		
		//SECOND='s' | MSECOND='ms' | USECOND='us' | NSECOND='ns' | MINUTE='min' | HOUR='hrs' | DAY='dys'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SECOND='s'
		public EnumLiteralDeclaration getSECONDEnumLiteralDeclaration_0() { return cSECONDEnumLiteralDeclaration_0; }
		
		//'s'
		public Keyword getSECONDSKeyword_0_0() { return cSECONDSKeyword_0_0; }
		
		//MSECOND='ms'
		public EnumLiteralDeclaration getMSECONDEnumLiteralDeclaration_1() { return cMSECONDEnumLiteralDeclaration_1; }
		
		//'ms'
		public Keyword getMSECONDMsKeyword_1_0() { return cMSECONDMsKeyword_1_0; }
		
		//USECOND='us'
		public EnumLiteralDeclaration getUSECONDEnumLiteralDeclaration_2() { return cUSECONDEnumLiteralDeclaration_2; }
		
		//'us'
		public Keyword getUSECONDUsKeyword_2_0() { return cUSECONDUsKeyword_2_0; }
		
		//NSECOND='ns'
		public EnumLiteralDeclaration getNSECONDEnumLiteralDeclaration_3() { return cNSECONDEnumLiteralDeclaration_3; }
		
		//'ns'
		public Keyword getNSECONDNsKeyword_3_0() { return cNSECONDNsKeyword_3_0; }
		
		//MINUTE='min'
		public EnumLiteralDeclaration getMINUTEEnumLiteralDeclaration_4() { return cMINUTEEnumLiteralDeclaration_4; }
		
		//'min'
		public Keyword getMINUTEMinKeyword_4_0() { return cMINUTEMinKeyword_4_0; }
		
		//HOUR='hrs'
		public EnumLiteralDeclaration getHOUREnumLiteralDeclaration_5() { return cHOUREnumLiteralDeclaration_5; }
		
		//'hrs'
		public Keyword getHOURHrsKeyword_5_0() { return cHOURHrsKeyword_5_0; }
		
		//DAY='dys'
		public EnumLiteralDeclaration getDAYEnumLiteralDeclaration_6() { return cDAYEnumLiteralDeclaration_6; }
		
		//'dys'
		public Keyword getDAYDysKeyword_6_0() { return cDAYDysKeyword_6_0; }
	}
	
	private final SpecificationElements pSpecification;
	private final ImportElements pImport;
	private final AbstractPatternElements pAbstractPattern;
	private final AbstractSystemElements pAbstractSystem;
	private final AbstractComponentElements pAbstractComponent;
	private final GroupDefElements pGroupDef;
	private final AbstractGroupElements pAbstractGroup;
	private final AbstractInteractionElements pAbstractInteraction;
	private final AbstractComponentNameElements pAbstractComponentName;
	private final SystemBindingElements pSystemBinding;
	private final GroupBindingElements pGroupBinding;
	private final PatternElements pPattern;
	private final ConfigurationElements pConfiguration;
	private final ConcreteSystemElements pConcreteSystem;
	private final ConcreteGroupElements pConcreteGroup;
	private final ParamValueElements pParamValue;
	private final ComponentInstanceElements pComponentInstance;
	private final InteractionElements pInteraction;
	private final ComponentNameElements pComponentName;
	private final TerminalRule tCOMPONENT_TYPE;
	private final TerminalRule tMULTIPLICITY;
	private final TerminalRule tPATTERN_ID;
	private final TerminalRule tINSTANCE_ID;
	private final TerminalRule tFQN_PATTERN_ID;
	private final TerminalRule tFQN_INSTANCE_ID;
	private final TerminalRule tFQN_COMPONENT;
	private final TerminalRule tDECIMAL;
	private final TimeUnitKindElements eTimeUnitKind;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSpecification = new SpecificationElements();
		this.pImport = new ImportElements();
		this.pAbstractPattern = new AbstractPatternElements();
		this.pAbstractSystem = new AbstractSystemElements();
		this.pAbstractComponent = new AbstractComponentElements();
		this.pGroupDef = new GroupDefElements();
		this.pAbstractGroup = new AbstractGroupElements();
		this.pAbstractInteraction = new AbstractInteractionElements();
		this.pAbstractComponentName = new AbstractComponentNameElements();
		this.pSystemBinding = new SystemBindingElements();
		this.pGroupBinding = new GroupBindingElements();
		this.pPattern = new PatternElements();
		this.pConfiguration = new ConfigurationElements();
		this.pConcreteSystem = new ConcreteSystemElements();
		this.pConcreteGroup = new ConcreteGroupElements();
		this.pParamValue = new ParamValueElements();
		this.pComponentInstance = new ComponentInstanceElements();
		this.pInteraction = new InteractionElements();
		this.pComponentName = new ComponentNameElements();
		this.tCOMPONENT_TYPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.COMPONENT_TYPE");
		this.tMULTIPLICITY = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.MULTIPLICITY");
		this.tPATTERN_ID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.PATTERN_ID");
		this.tINSTANCE_ID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.INSTANCE_ID");
		this.tFQN_PATTERN_ID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.FQN_PATTERN_ID");
		this.tFQN_INSTANCE_ID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.FQN_INSTANCE_ID");
		this.tFQN_COMPONENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.FQN_COMPONENT");
		this.tDECIMAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.msl.MSL.DECIMAL");
		this.eTimeUnitKind = new TimeUnitKindElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.msl.MSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Specification:
	//	imports+=Import*
	//	absPattern=AbstractPattern?
	//	pattern+=Pattern*
	//	configuration=Configuration?;
	public SpecificationElements getSpecificationAccess() {
		return pSpecification;
	}
	
	public ParserRule getSpecificationRule() {
		return getSpecificationAccess().getRule();
	}
	
	//Import:
	//	'import' importedNamespace=[AbstractPattern|PATTERN_ID];
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//AbstractPattern:
	//	'abstract' 'pattern' name=PATTERN_ID '{'
	//	managedSystems+=AbstractSystem*
	//	abstractGroups+=AbstractGroup*
	//	interactions+=AbstractInteraction*
	//	'}';
	public AbstractPatternElements getAbstractPatternAccess() {
		return pAbstractPattern;
	}
	
	public ParserRule getAbstractPatternRule() {
		return getAbstractPatternAccess().getRule();
	}
	
	//AbstractSystem:
	//	'system' name=PATTERN_ID;
	public AbstractSystemElements getAbstractSystemAccess() {
		return pAbstractSystem;
	}
	
	public ParserRule getAbstractSystemRule() {
		return getAbstractSystemAccess().getRule();
	}
	
	//AbstractComponent:
	//	name=COMPONENT_TYPE;
	public AbstractComponentElements getAbstractComponentAccess() {
		return pAbstractComponent;
	}
	
	public ParserRule getAbstractComponentRule() {
		return getAbstractComponentAccess().getRule();
	}
	
	//GroupDef:
	//	grp=[AbstractGroup|PATTERN_ID] ('[' mult=MULTIPLICITY ']')?;
	public GroupDefElements getGroupDefAccess() {
		return pGroupDef;
	}
	
	public ParserRule getGroupDefRule() {
		return getGroupDefAccess().getRule();
	}
	
	//AbstractGroup:
	//	'group' name=PATTERN_ID '{' ('managedSyS' manSys+=[AbstractSystem|PATTERN_ID] (','
	//	manSys+=[AbstractSystem|PATTERN_ID])*)? ('managedGrp' manGrp+=GroupDef (',' manGrp+=GroupDef)*)?
	//	'components' components+=AbstractComponent (',' components+=AbstractComponent)*
	//	'}';
	public AbstractGroupElements getAbstractGroupAccess() {
		return pAbstractGroup;
	}
	
	public ParserRule getAbstractGroupRule() {
		return getAbstractGroupAccess().getRule();
	}
	
	//AbstractInteraction:
	//	'interaction' start=AbstractComponentName '->' end=AbstractComponentName ('[' low=MULTIPLICITY ',' high=MULTIPLICITY
	//	']')?;
	public AbstractInteractionElements getAbstractInteractionAccess() {
		return pAbstractInteraction;
	}
	
	public ParserRule getAbstractInteractionRule() {
		return getAbstractInteractionAccess().getRule();
	}
	
	//AbstractComponentName:
	//	type=[AbstractComponent|FQN_COMPONENT];
	public AbstractComponentNameElements getAbstractComponentNameAccess() {
		return pAbstractComponentName;
	}
	
	public ParserRule getAbstractComponentNameRule() {
		return getAbstractComponentNameAccess().getRule();
	}
	
	//SystemBinding:
	//	'system' name=PATTERN_ID ':' absSys=[AbstractSystem|FQN_PATTERN_ID];
	public SystemBindingElements getSystemBindingAccess() {
		return pSystemBinding;
	}
	
	public ParserRule getSystemBindingRule() {
		return getSystemBindingAccess().getRule();
	}
	
	//GroupBinding:
	//	'group' name=PATTERN_ID ':' absGroup=[AbstractGroup|FQN_PATTERN_ID];
	public GroupBindingElements getGroupBindingAccess() {
		return pGroupBinding;
	}
	
	public ParserRule getGroupBindingRule() {
		return getGroupBindingAccess().getRule();
	}
	
	//Pattern:
	//	'concrete' 'pattern' name=PATTERN_ID 'concretizationOf' absPattern=[AbstractPattern|PATTERN_ID] '{'
	//	managedSystems+=SystemBinding*
	//	groups+=GroupBinding*
	//	'}';
	public PatternElements getPatternAccess() {
		return pPattern;
	}
	
	public ParserRule getPatternRule() {
		return getPatternAccess().getRule();
	}
	
	//Configuration:
	//	'configuration' name=PATTERN_ID 'instanceOf' (pattern+=[Pattern|PATTERN_ID] (',' pattern+=[Pattern|PATTERN_ID])*) '{'
	//	concreteSystems+=ConcreteSystem*
	//	concreteGroups+=ConcreteGroup*
	//	concreteInteractions+=Interaction*
	//	'}';
	public ConfigurationElements getConfigurationAccess() {
		return pConfiguration;
	}
	
	public ParserRule getConfigurationRule() {
		return getConfigurationAccess().getRule();
	}
	
	//ConcreteSystem:
	//	name=INSTANCE_ID ':' (bindings+=[SystemBinding|FQN_PATTERN_ID] (',' bindings+=[SystemBinding|FQN_PATTERN_ID])*);
	public ConcreteSystemElements getConcreteSystemAccess() {
		return pConcreteSystem;
	}
	
	public ParserRule getConcreteSystemRule() {
		return getConcreteSystemAccess().getRule();
	}
	
	////AttValue: "(" nameAtt=INSTANCE_ID ',' valAtt=INSTANCE_ID ")";
	//ConcreteGroup:
	//	name=INSTANCE_ID ':' (abstractGroups+=[GroupBinding|FQN_PATTERN_ID] (','
	//	abstractGroups+=[GroupBinding|FQN_PATTERN_ID])*) '{' ('managedSyS' manSys+=[ConcreteSystem|INSTANCE_ID] (','
	//	manSys+=[ConcreteSystem|INSTANCE_ID])*)? ('managedGrp' manGrp+=[ConcreteGroup|INSTANCE_ID] (','
	//	manGrp+=[ConcreteGroup|INSTANCE_ID])*)?
	//	'components' components+=ComponentInstance (',' components+=ComponentInstance)*
	//	'}';
	public ConcreteGroupElements getConcreteGroupAccess() {
		return pConcreteGroup;
	}
	
	public ParserRule getConcreteGroupRule() {
		return getConcreteGroupAccess().getRule();
	}
	
	////To allow real type NFPs annotations at component instance level 
	//ParamValue:
	//	"[" nameParam=INSTANCE_ID '=' valParam=DECIMAL unit=TimeUnitKind? "]";
	public ParamValueElements getParamValueAccess() {
		return pParamValue;
	}
	
	public ParserRule getParamValueRule() {
		return getParamValueAccess().getRule();
	}
	
	//ComponentInstance:
	//	name=INSTANCE_ID ':' type=COMPONENT_TYPE (paramValues+=ParamValue paramValues+=ParamValue*)?;
	public ComponentInstanceElements getComponentInstanceAccess() {
		return pComponentInstance;
	}
	
	public ParserRule getComponentInstanceRule() {
		return getComponentInstanceAccess().getRule();
	}
	
	//Interaction:
	//	start=ComponentName '->' end=ComponentName;
	public InteractionElements getInteractionAccess() {
		return pInteraction;
	}
	
	public ParserRule getInteractionRule() {
		return getInteractionAccess().getRule();
	}
	
	//ComponentName:
	//	component=[ComponentInstance|FQN_INSTANCE_ID];
	public ComponentNameElements getComponentNameAccess() {
		return pComponentName;
	}
	
	public ParserRule getComponentNameRule() {
		return getComponentNameAccess().getRule();
	}
	
	//terminal COMPONENT_TYPE:
	//	'M' | 'A' | 'P' | 'E';
	public TerminalRule getCOMPONENT_TYPERule() {
		return tCOMPONENT_TYPE;
	}
	
	//terminal MULTIPLICITY:
	//	'1' | '*-ALL' | '*-SOME' | '*-ONE';
	public TerminalRule getMULTIPLICITYRule() {
		return tMULTIPLICITY;
	}
	
	//terminal PATTERN_ID:
	//	'A'..'Z' ('a'..'z' | 'A'..'Z' | '_')+;
	public TerminalRule getPATTERN_IDRule() {
		return tPATTERN_ID;
	}
	
	//terminal INSTANCE_ID:
	//	'a'..'z' ('a'..'z' | 'A'..'Z' | '0'..'9' | '_')+;
	public TerminalRule getINSTANCE_IDRule() {
		return tINSTANCE_ID;
	}
	
	//terminal FQN_PATTERN_ID:
	//	PATTERN_ID ("." PATTERN_ID)+;
	public TerminalRule getFQN_PATTERN_IDRule() {
		return tFQN_PATTERN_ID;
	}
	
	//terminal FQN_INSTANCE_ID:
	//	INSTANCE_ID "." INSTANCE_ID;
	public TerminalRule getFQN_INSTANCE_IDRule() {
		return tFQN_INSTANCE_ID;
	}
	
	//terminal FQN_COMPONENT:
	//	PATTERN_ID "." COMPONENT_TYPE;
	public TerminalRule getFQN_COMPONENTRule() {
		return tFQN_COMPONENT;
	}
	
	//terminal DECIMAL:
	//	INT '.' INT;
	public TerminalRule getDECIMALRule() {
		return tDECIMAL;
	}
	
	//enum TimeUnitKind:
	//	SECOND='s' |
	//	MSECOND='ms' |
	//	USECOND='us' |
	//	NSECOND='ns' |
	//	MINUTE='min' |
	//	HOUR='hrs' |
	//	DAY='dys';
	public TimeUnitKindElements getTimeUnitKindAccess() {
		return eTimeUnitKind;
	}
	
	public EnumRule getTimeUnitKindRule() {
		return getTimeUnitKindAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
