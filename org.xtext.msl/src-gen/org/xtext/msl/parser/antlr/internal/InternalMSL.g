/*
 * generated by Xtext 2.14.0
 */
grammar InternalMSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.msl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.msl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.msl.services.MSLGrammarAccess;

}

@parser::members {

 	private MSLGrammarAccess grammarAccess;

    public InternalMSLParser(TokenStream input, MSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Specification";
   	}

   	@Override
   	protected MSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSpecification
entryRuleSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecificationRule()); }
	iv_ruleSpecification=ruleSpecification
	{ $current=$iv_ruleSpecification.current; }
	EOF;

// Rule Specification
ruleSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getImportsImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"org.xtext.msl.MSL.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getAbsPatternAbstractPatternParserRuleCall_1_0());
				}
				lv_absPattern_1_0=ruleAbstractPattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					set(
						$current,
						"absPattern",
						lv_absPattern_1_0,
						"org.xtext.msl.MSL.AbstractPattern");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getPatternPatternParserRuleCall_2_0());
				}
				lv_pattern_2_0=rulePattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					add(
						$current,
						"pattern",
						lv_pattern_2_0,
						"org.xtext.msl.MSL.Pattern");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getConfigurationConfigurationParserRuleCall_3_0());
				}
				lv_configuration_3_0=ruleConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					set(
						$current,
						"configuration",
						lv_configuration_3_0,
						"org.xtext.msl.MSL.Configuration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
				}
				otherlv_1=RULE_PATTERN_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getImportAccess().getImportedNamespaceAbstractPatternCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleAbstractPattern
entryRuleAbstractPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractPatternRule()); }
	iv_ruleAbstractPattern=ruleAbstractPattern
	{ $current=$iv_ruleAbstractPattern.current; }
	EOF;

// Rule AbstractPattern
ruleAbstractPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='abstract'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbstractPatternAccess().getAbstractKeyword_0());
		}
		otherlv_1='pattern'
		{
			newLeafNode(otherlv_1, grammarAccess.getAbstractPatternAccess().getPatternKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_PATTERN_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getAbstractPatternAccess().getNamePATTERN_IDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAbstractPatternRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.msl.MSL.PATTERN_ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAbstractPatternAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractPatternAccess().getManagedSystemsAbstractSystemParserRuleCall_4_0());
				}
				lv_managedSystems_4_0=ruleAbstractSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractPatternRule());
					}
					add(
						$current,
						"managedSystems",
						lv_managedSystems_4_0,
						"org.xtext.msl.MSL.AbstractSystem");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractPatternAccess().getAbstractGroupsAbstractGroupParserRuleCall_5_0());
				}
				lv_abstractGroups_5_0=ruleAbstractGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractPatternRule());
					}
					add(
						$current,
						"abstractGroups",
						lv_abstractGroups_5_0,
						"org.xtext.msl.MSL.AbstractGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractPatternAccess().getInteractionsAbstractInteractionParserRuleCall_6_0());
				}
				lv_interactions_6_0=ruleAbstractInteraction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractPatternRule());
					}
					add(
						$current,
						"interactions",
						lv_interactions_6_0,
						"org.xtext.msl.MSL.AbstractInteraction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAbstractPatternAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleAbstractSystem
entryRuleAbstractSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractSystemRule()); }
	iv_ruleAbstractSystem=ruleAbstractSystem
	{ $current=$iv_ruleAbstractSystem.current; }
	EOF;

// Rule AbstractSystem
ruleAbstractSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbstractSystemAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_PATTERN_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAbstractSystemAccess().getNamePATTERN_IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAbstractSystemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.msl.MSL.PATTERN_ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAbstractComponent
entryRuleAbstractComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractComponentRule()); }
	iv_ruleAbstractComponent=ruleAbstractComponent
	{ $current=$iv_ruleAbstractComponent.current; }
	EOF;

// Rule AbstractComponent
ruleAbstractComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_COMPONENT_TYPE
			{
				newLeafNode(lv_name_0_0, grammarAccess.getAbstractComponentAccess().getNameCOMPONENT_TYPETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAbstractComponentRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.msl.MSL.COMPONENT_TYPE");
			}
		)
	)
;

// Entry rule entryRuleGroupDef
entryRuleGroupDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupDefRule()); }
	iv_ruleGroupDef=ruleGroupDef
	{ $current=$iv_ruleGroupDef.current; }
	EOF;

// Rule GroupDef
ruleGroupDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupDefRule());
					}
				}
				otherlv_0=RULE_PATTERN_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getGroupDefAccess().getGrpAbstractGroupCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getGroupDefAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					lv_mult_2_0=RULE_MULTIPLICITY
					{
						newLeafNode(lv_mult_2_0, grammarAccess.getGroupDefAccess().getMultMULTIPLICITYTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupDefRule());
						}
						setWithLastConsumed(
							$current,
							"mult",
							lv_mult_2_0,
							"org.xtext.msl.MSL.MULTIPLICITY");
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getGroupDefAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleAbstractGroup
entryRuleAbstractGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractGroupRule()); }
	iv_ruleAbstractGroup=ruleAbstractGroup
	{ $current=$iv_ruleAbstractGroup.current; }
	EOF;

// Rule AbstractGroup
ruleAbstractGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='group'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbstractGroupAccess().getGroupKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_PATTERN_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAbstractGroupAccess().getNamePATTERN_IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAbstractGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.msl.MSL.PATTERN_ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAbstractGroupAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='managedSyS'
			{
				newLeafNode(otherlv_3, grammarAccess.getAbstractGroupAccess().getManagedSySKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAbstractGroupRule());
						}
					}
					otherlv_4=RULE_PATTERN_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getAbstractGroupAccess().getManSysAbstractSystemCrossReference_3_1_0());
					}
				)
			)
		)?
		(
			otherlv_5='managedGrp'
			{
				newLeafNode(otherlv_5, grammarAccess.getAbstractGroupAccess().getManagedGrpKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractGroupAccess().getManGrpGroupDefParserRuleCall_4_1_0());
					}
					lv_manGrp_6_0=ruleGroupDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractGroupRule());
						}
						add(
							$current,
							"manGrp",
							lv_manGrp_6_0,
							"org.xtext.msl.MSL.GroupDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getAbstractGroupAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAbstractGroupAccess().getManGrpGroupDefParserRuleCall_4_2_1_0());
						}
						lv_manGrp_8_0=ruleGroupDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAbstractGroupRule());
							}
							add(
								$current,
								"manGrp",
								lv_manGrp_8_0,
								"org.xtext.msl.MSL.GroupDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_9='components'
		{
			newLeafNode(otherlv_9, grammarAccess.getAbstractGroupAccess().getComponentsKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractGroupAccess().getComponentsAbstractComponentParserRuleCall_6_0());
				}
				lv_components_10_0=ruleAbstractComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractGroupRule());
					}
					add(
						$current,
						"components",
						lv_components_10_0,
						"org.xtext.msl.MSL.AbstractComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getAbstractGroupAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAbstractGroupAccess().getComponentsAbstractComponentParserRuleCall_7_1_0());
					}
					lv_components_12_0=ruleAbstractComponent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAbstractGroupRule());
						}
						add(
							$current,
							"components",
							lv_components_12_0,
							"org.xtext.msl.MSL.AbstractComponent");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getAbstractGroupAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleAbstractInteraction
entryRuleAbstractInteraction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractInteractionRule()); }
	iv_ruleAbstractInteraction=ruleAbstractInteraction
	{ $current=$iv_ruleAbstractInteraction.current; }
	EOF;

// Rule AbstractInteraction
ruleAbstractInteraction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='interaction'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbstractInteractionAccess().getInteractionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractInteractionAccess().getStartAbstractComponentNameParserRuleCall_1_0());
				}
				lv_start_1_0=ruleAbstractComponentName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractInteractionRule());
					}
					set(
						$current,
						"start",
						lv_start_1_0,
						"org.xtext.msl.MSL.AbstractComponentName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='->'
		{
			newLeafNode(otherlv_2, grammarAccess.getAbstractInteractionAccess().getHyphenMinusGreaterThanSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractInteractionAccess().getEndAbstractComponentNameParserRuleCall_3_0());
				}
				lv_end_3_0=ruleAbstractComponentName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractInteractionRule());
					}
					set(
						$current,
						"end",
						lv_end_3_0,
						"org.xtext.msl.MSL.AbstractComponentName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getAbstractInteractionAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					lv_low_5_0=RULE_MULTIPLICITY
					{
						newLeafNode(lv_low_5_0, grammarAccess.getAbstractInteractionAccess().getLowMULTIPLICITYTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAbstractInteractionRule());
						}
						setWithLastConsumed(
							$current,
							"low",
							lv_low_5_0,
							"org.xtext.msl.MSL.MULTIPLICITY");
					}
				)
			)
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getAbstractInteractionAccess().getCommaKeyword_4_2());
			}
			(
				(
					lv_high_7_0=RULE_MULTIPLICITY
					{
						newLeafNode(lv_high_7_0, grammarAccess.getAbstractInteractionAccess().getHighMULTIPLICITYTerminalRuleCall_4_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAbstractInteractionRule());
						}
						setWithLastConsumed(
							$current,
							"high",
							lv_high_7_0,
							"org.xtext.msl.MSL.MULTIPLICITY");
					}
				)
			)
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getAbstractInteractionAccess().getRightSquareBracketKeyword_4_4());
			}
		)?
	)
;

// Entry rule entryRuleAbstractComponentName
entryRuleAbstractComponentName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractComponentNameRule()); }
	iv_ruleAbstractComponentName=ruleAbstractComponentName
	{ $current=$iv_ruleAbstractComponentName.current; }
	EOF;

// Rule AbstractComponentName
ruleAbstractComponentName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAbstractComponentNameRule());
				}
			}
			otherlv_0=RULE_FQN_COMPONENT
			{
				newLeafNode(otherlv_0, grammarAccess.getAbstractComponentNameAccess().getTypeAbstractComponentCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleSystemBinding
entryRuleSystemBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemBindingRule()); }
	iv_ruleSystemBinding=ruleSystemBinding
	{ $current=$iv_ruleSystemBinding.current; }
	EOF;

// Rule SystemBinding
ruleSystemBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemBindingAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_PATTERN_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSystemBindingAccess().getNamePATTERN_IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemBindingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.msl.MSL.PATTERN_ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemBindingAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemBindingRule());
					}
				}
				otherlv_3=RULE_FQN_PATTERN_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getSystemBindingAccess().getAbsSysAbstractSystemCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleGroupBinding
entryRuleGroupBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupBindingRule()); }
	iv_ruleGroupBinding=ruleGroupBinding
	{ $current=$iv_ruleGroupBinding.current; }
	EOF;

// Rule GroupBinding
ruleGroupBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='group'
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupBindingAccess().getGroupKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_PATTERN_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGroupBindingAccess().getNamePATTERN_IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupBindingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.msl.MSL.PATTERN_ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getGroupBindingAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupBindingRule());
					}
				}
				otherlv_3=RULE_FQN_PATTERN_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getGroupBindingAccess().getAbsGroupAbstractGroupCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRulePattern
entryRulePattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternRule()); }
	iv_rulePattern=rulePattern
	{ $current=$iv_rulePattern.current; }
	EOF;

// Rule Pattern
rulePattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='concrete'
		{
			newLeafNode(otherlv_0, grammarAccess.getPatternAccess().getConcreteKeyword_0());
		}
		otherlv_1='pattern'
		{
			newLeafNode(otherlv_1, grammarAccess.getPatternAccess().getPatternKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_PATTERN_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPatternAccess().getNamePATTERN_IDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatternRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.msl.MSL.PATTERN_ID");
				}
			)
		)
		otherlv_3='concretizationOf'
		{
			newLeafNode(otherlv_3, grammarAccess.getPatternAccess().getConcretizationOfKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatternRule());
					}
				}
				otherlv_4=RULE_PATTERN_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getPatternAccess().getAbsPatternAbstractPatternCrossReference_4_0());
				}
			)
		)
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternAccess().getManagedSystemsSystemBindingParserRuleCall_6_0());
				}
				lv_managedSystems_6_0=ruleSystemBinding
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternRule());
					}
					add(
						$current,
						"managedSystems",
						lv_managedSystems_6_0,
						"org.xtext.msl.MSL.SystemBinding");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternAccess().getGroupsGroupBindingParserRuleCall_7_0());
				}
				lv_groups_7_0=ruleGroupBinding
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternRule());
					}
					add(
						$current,
						"groups",
						lv_groups_7_0,
						"org.xtext.msl.MSL.GroupBinding");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	iv_ruleConfiguration=ruleConfiguration
	{ $current=$iv_ruleConfiguration.current; }
	EOF;

// Rule Configuration
ruleConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='configuration'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigurationAccess().getConfigurationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_PATTERN_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConfigurationAccess().getNamePATTERN_IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigurationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.msl.MSL.PATTERN_ID");
				}
			)
		)
		otherlv_2='instanceOf'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigurationAccess().getInstanceOfKeyword_2());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConfigurationRule());
						}
					}
					otherlv_3=RULE_PATTERN_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getConfigurationAccess().getPatternPatternCrossReference_3_0_0());
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getConfigurationAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConfigurationRule());
							}
						}
						otherlv_5=RULE_PATTERN_ID
						{
							newLeafNode(otherlv_5, grammarAccess.getConfigurationAccess().getPatternPatternCrossReference_3_1_1_0());
						}
					)
				)
			)*
		)
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getConcreteSystemsConcreteSystemParserRuleCall_5_0());
				}
				lv_concreteSystems_7_0=ruleConcreteSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					add(
						$current,
						"concreteSystems",
						lv_concreteSystems_7_0,
						"org.xtext.msl.MSL.ConcreteSystem");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getConcreteGroupsConcreteGroupParserRuleCall_6_0());
				}
				lv_concreteGroups_8_0=ruleConcreteGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					add(
						$current,
						"concreteGroups",
						lv_concreteGroups_8_0,
						"org.xtext.msl.MSL.ConcreteGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getConcreteInteractionsInteractionParserRuleCall_7_0());
				}
				lv_concreteInteractions_9_0=ruleInteraction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					add(
						$current,
						"concreteInteractions",
						lv_concreteInteractions_9_0,
						"org.xtext.msl.MSL.Interaction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleConcreteSystem
entryRuleConcreteSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcreteSystemRule()); }
	iv_ruleConcreteSystem=ruleConcreteSystem
	{ $current=$iv_ruleConcreteSystem.current; }
	EOF;

// Rule ConcreteSystem
ruleConcreteSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_INSTANCE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getConcreteSystemAccess().getNameINSTANCE_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteSystemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.msl.MSL.INSTANCE_ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConcreteSystemAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConcreteSystemRule());
						}
					}
					otherlv_2=RULE_FQN_PATTERN_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getConcreteSystemAccess().getBindingsSystemBindingCrossReference_2_0_0());
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getConcreteSystemAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConcreteSystemRule());
							}
						}
						otherlv_4=RULE_FQN_PATTERN_ID
						{
							newLeafNode(otherlv_4, grammarAccess.getConcreteSystemAccess().getBindingsSystemBindingCrossReference_2_1_1_0());
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleAttValue
entryRuleAttValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttValueRule()); }
	iv_ruleAttValue=ruleAttValue
	{ $current=$iv_ruleAttValue.current; }
	EOF;

// Rule AttValue
ruleAttValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getAttValueAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				lv_nameAtt_1_0=RULE_INSTANCE_ID
				{
					newLeafNode(lv_nameAtt_1_0, grammarAccess.getAttValueAccess().getNameAttINSTANCE_IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttValueRule());
					}
					setWithLastConsumed(
						$current,
						"nameAtt",
						lv_nameAtt_1_0,
						"org.xtext.msl.MSL.INSTANCE_ID");
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getAttValueAccess().getCommaKeyword_2());
		}
		(
			(
				lv_valAtt_3_0=RULE_INSTANCE_ID
				{
					newLeafNode(lv_valAtt_3_0, grammarAccess.getAttValueAccess().getValAttINSTANCE_IDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttValueRule());
					}
					setWithLastConsumed(
						$current,
						"valAtt",
						lv_valAtt_3_0,
						"org.xtext.msl.MSL.INSTANCE_ID");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getAttValueAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleConcreteGroup
entryRuleConcreteGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcreteGroupRule()); }
	iv_ruleConcreteGroup=ruleConcreteGroup
	{ $current=$iv_ruleConcreteGroup.current; }
	EOF;

// Rule ConcreteGroup
ruleConcreteGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_INSTANCE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getConcreteGroupAccess().getNameINSTANCE_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.msl.MSL.INSTANCE_ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConcreteGroupAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConcreteGroupRule());
						}
					}
					otherlv_2=RULE_FQN_PATTERN_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getConcreteGroupAccess().getAbstractGroupsGroupBindingCrossReference_2_0_0());
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getConcreteGroupAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConcreteGroupRule());
							}
						}
						otherlv_4=RULE_FQN_PATTERN_ID
						{
							newLeafNode(otherlv_4, grammarAccess.getConcreteGroupAccess().getAbstractGroupsGroupBindingCrossReference_2_1_1_0());
						}
					)
				)
			)*
		)
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getConcreteGroupAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_6='managedSyS'
			{
				newLeafNode(otherlv_6, grammarAccess.getConcreteGroupAccess().getManagedSySKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConcreteGroupRule());
						}
					}
					otherlv_7=RULE_INSTANCE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getConcreteGroupAccess().getManSysConcreteSystemCrossReference_4_1_0());
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getConcreteGroupAccess().getAttValuesAttValueParserRuleCall_4_2_0_0());
						}
						lv_attValues_8_0=ruleAttValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConcreteGroupRule());
							}
							add(
								$current,
								"attValues",
								lv_attValues_8_0,
								"org.xtext.msl.MSL.AttValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9=','
					{
						newLeafNode(otherlv_9, grammarAccess.getConcreteGroupAccess().getCommaKeyword_4_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getConcreteGroupAccess().getAttValuesAttValueParserRuleCall_4_2_1_1_0());
							}
							lv_attValues_10_0=ruleAttValue
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConcreteGroupRule());
								}
								add(
									$current,
									"attValues",
									lv_attValues_10_0,
									"org.xtext.msl.MSL.AttValue");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)?
		(
			otherlv_11='managedGrp'
			{
				newLeafNode(otherlv_11, grammarAccess.getConcreteGroupAccess().getManagedGrpKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConcreteGroupRule());
						}
					}
					otherlv_12=RULE_INSTANCE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getConcreteGroupAccess().getManGrpConcreteGroupCrossReference_5_1_0());
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getConcreteGroupAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConcreteGroupRule());
							}
						}
						otherlv_14=RULE_INSTANCE_ID
						{
							newLeafNode(otherlv_14, grammarAccess.getConcreteGroupAccess().getManGrpConcreteGroupCrossReference_5_2_1_0());
						}
					)
				)
			)*
		)?
		otherlv_15='components'
		{
			newLeafNode(otherlv_15, grammarAccess.getConcreteGroupAccess().getComponentsKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcreteGroupAccess().getComponentsComponentInstanceParserRuleCall_7_0());
				}
				lv_components_16_0=ruleComponentInstance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcreteGroupRule());
					}
					add(
						$current,
						"components",
						lv_components_16_0,
						"org.xtext.msl.MSL.ComponentInstance");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_17=','
			{
				newLeafNode(otherlv_17, grammarAccess.getConcreteGroupAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConcreteGroupAccess().getComponentsComponentInstanceParserRuleCall_8_1_0());
					}
					lv_components_18_0=ruleComponentInstance
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConcreteGroupRule());
						}
						add(
							$current,
							"components",
							lv_components_18_0,
							"org.xtext.msl.MSL.ComponentInstance");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getConcreteGroupAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleComponentInstance
entryRuleComponentInstance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentInstanceRule()); }
	iv_ruleComponentInstance=ruleComponentInstance
	{ $current=$iv_ruleComponentInstance.current; }
	EOF;

// Rule ComponentInstance
ruleComponentInstance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_INSTANCE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getComponentInstanceAccess().getNameINSTANCE_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentInstanceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.msl.MSL.INSTANCE_ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentInstanceAccess().getColonKeyword_1());
		}
		(
			(
				lv_type_2_0=RULE_COMPONENT_TYPE
				{
					newLeafNode(lv_type_2_0, grammarAccess.getComponentInstanceAccess().getTypeCOMPONENT_TYPETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentInstanceRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.msl.MSL.COMPONENT_TYPE");
				}
			)
		)
	)
;

// Entry rule entryRuleInteraction
entryRuleInteraction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInteractionRule()); }
	iv_ruleInteraction=ruleInteraction
	{ $current=$iv_ruleInteraction.current; }
	EOF;

// Rule Interaction
ruleInteraction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInteractionAccess().getStartComponentNameParserRuleCall_0_0());
				}
				lv_start_0_0=ruleComponentName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteractionRule());
					}
					set(
						$current,
						"start",
						lv_start_0_0,
						"org.xtext.msl.MSL.ComponentName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getInteractionAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInteractionAccess().getEndComponentNameParserRuleCall_2_0());
				}
				lv_end_2_0=ruleComponentName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteractionRule());
					}
					set(
						$current,
						"end",
						lv_end_2_0,
						"org.xtext.msl.MSL.ComponentName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComponentName
entryRuleComponentName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentNameRule()); }
	iv_ruleComponentName=ruleComponentName
	{ $current=$iv_ruleComponentName.current; }
	EOF;

// Rule ComponentName
ruleComponentName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getComponentNameRule());
				}
			}
			otherlv_0=RULE_FQN_INSTANCE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getComponentNameAccess().getComponentComponentInstanceCrossReference_0());
			}
		)
	)
;

RULE_COMPONENT_TYPE : ('M'|'A'|'P'|'E');

RULE_MULTIPLICITY : ('1'|'*-ALL'|'*-SOME'|'*-ONE');

RULE_PATTERN_ID : 'A'..'Z' ('a'..'z'|'A'..'Z'|'_')+;

RULE_INSTANCE_ID : 'a'..'z' ('a'..'z'|'A'..'Z'|'0'..'9'|'_')+;

RULE_FQN_PATTERN_ID : RULE_PATTERN_ID ('.' RULE_PATTERN_ID)+;

RULE_FQN_INSTANCE_ID : RULE_INSTANCE_ID '.' RULE_INSTANCE_ID;

RULE_FQN_COMPONENT : RULE_PATTERN_ID '.' RULE_COMPONENT_TYPE;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
